apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "geoserver.fullname" . }}-config
  labels:
    {{- include "geoserver.labels" . | nindent 4 }}
    app.kubernetes.io/component: "config"
  {{- if .Values.global.annotations }}
  annotations:
    {{- toYaml .Values.global.annotations | nindent 6 }}
  {{- end }}
spec:
  revisionHistoryLimit: 3
  replicas: {{ .Values.geoserver.config.replicaCount }}
  selector:
    matchLabels:
      {{- include "geoserver.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: "config"
  template:
    metadata:
      annotations:
      {{- with .Values.geoserver.config.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
        checksum/config: {{ include (print $.Template.BasePath "/config/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "geoserver.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: "config"
        {{- if .Values.global.custom_pod_labels }}
          {{- toYaml .Values.global.custom_pod_labels | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "geoserver.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.geoserver.config.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-config
          securityContext:
            {{- toYaml .Values.geoserver.config.securityContext | nindent 12 }}
          image: "{{ trimSuffix "/" .Values.global.image.registry | default "docker.io" }}/{{ .Values.geoserver.config.image.repository }}:{{ .Values.geoserver.config.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - java org.springframework.boot.loader.JarLauncher
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: native
            - name: CONFIG_NATIVE_PATH
              value: /opt/app/config
            {{ include "geoserver.common.env.variables" . | nindent 12}}

            {{- if .Values.geoserver.config.env }}
            {{ toYaml .Values.geoserver.config.env | nindent 12 }}
            {{- end }}

          volumeMounts:
            - name: configs
              mountPath: /opt/app/config

          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          startupProbe:
            httpGet:
              path: /actuator/health
              port: http
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: http
            periodSeconds: 10
            failureThreshold: 10
            initialDelaySeconds: 30
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: http
            periodSeconds: 5

          resources:
            {{- toYaml .Values.geoserver.config.resources | nindent 12 }}
      volumes:
        - name: configs
          configMap:
            name: {{ include "geoserver.fullname" . }}-config-configs

      {{- with .Values.geoserver.config.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.geoserver.config.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.geoserver.config.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
