{{- $geoserverName := (include "geoserver.fullname" .) -}}
{{- $geoserverLabels := (include "geoserver.labels" .) -}}
{{- $geoserverSelectorLabels := (include "geoserver.selectorLabels" .) -}}
{{- $geoserverServiceAccountName := (include "geoserver.serviceAccountName" .) }}
{{- $chart := .Chart -}}
{{- $shaConfigmap := (include (print $.Template.BasePath "/config/configmap.yaml") . | sha256sum) -}}
{{- $values := .Values -}}

{{- range $serviceName, $serviceDefinition := $values.geoserver.services }}
---
# service {{ $serviceName }}
apiVersion: v1
kind: Service
metadata:
  name: {{ $geoserverName }}-{{ $serviceName }}
  labels:
    {{- $geoserverLabels | nindent 4 }}
    app.kubernetes.io/component: {{ $serviceName }}
  {{- if or $values.global.annotations $serviceDefinition.annotations }}
  annotations:
    {{- if $values.global.annotations -}}
    {{- toYaml $values.global.annotations | nindent 4 }}
    {{- end -}}
    {{- if $serviceDefinition.annotations -}}
    {{- toYaml $serviceDefinition.annotations | nindent 4 }}
    {{- end -}}
  {{- end }}
spec:
  type: {{ $serviceDefinition.service.type }}
  ports:
    - port: {{ $serviceDefinition.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{ $geoserverSelectorLabels | nindent 4  }}
    app.kubernetes.io/component: {{ $serviceName }}

---
# deployment {{ $serviceName }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $geoserverName }}-{{ $serviceName }}
  labels:
    {{- $geoserverLabels  | nindent 4 }}
    app.kubernetes.io/component: {{ $serviceName }}
  {{- if or $values.global.annotations $serviceDefinition.annotations }}
  annotations:
    {{- if $values.global.annotations -}}
    {{- toYaml $values.global.annotations | nindent 4 }}
    {{- end -}}
    {{- if $serviceDefinition.annotations -}}
    {{- toYaml $serviceDefinition.annotations | nindent 4 }}
    {{- end -}}
  {{- end }}
spec:
  revisionHistoryLimit: {{ $values.global.revisionHistoryLimit | default 3 }}
  replicas: {{ $serviceDefinition.replicaCount }}
  selector:
    matchLabels:
      {{ $geoserverSelectorLabels | nindent 6 }}
      app.kubernetes.io/component: {{ $serviceName }}
  template:
    metadata:
      annotations:
      {{- with $serviceDefinition.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
        checksum/config: {{ $shaConfigmap }}
        specificValues/sha256: {{ toYaml $serviceDefinition | sha256sum }}
        globalValues/sha256: {{ toYaml $values.global | sha256sum }}
      labels:
        {{ $geoserverSelectorLabels | nindent 8 }}
        app.kubernetes.io/component: {{ $serviceName }}
        {{- if $values.global.custom_pod_labels }}
          {{- toYaml $values.global.custom_pod_labels | nindent 8 }}
        {{- end }}
    spec:
      volumes:
        - name: configs
          configMap:
            name: {{ $geoserverName }}-config-configs
      {{- range $mountPointName := $values.geoserver.volumeMounts }}
        - name: {{ $mountPointName.mountName }}
          persistentVolumeClaim:
           claimName: {{ $mountPointName.pvcName }}
      {{- end }}

      serviceAccountName: {{ $geoserverServiceAccountName }}
      securityContext:
        {{- toYaml $serviceDefinition.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $serviceName }}
          securityContext:
            {{- toYaml $serviceDefinition.securityContext | nindent 12 }}
          image: "{{ trimSuffix "/" $values.global.image.registry | default "docker.io" }}/{{ $serviceDefinition.image.repository }}:{{ $serviceDefinition.image.tag | default $chart.AppVersion }}"
          imagePullPolicy: {{ $values.global.image.pullPolicy }}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{ $values.global.profile | quote}}
          {{ include "geoserver.common.env.variables" $ | nindent 12}}
          {{- if $serviceDefinition.env }}
          {{ toYaml $serviceDefinition.env | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: health
              containerPort: 8081
              protocol: TCP
          volumeMounts:
            - name: configs
              mountPath: /etc/gscloud
          {{- range $mountPointName := $values.geoserver.volumeMounts }}
            - mountPath: {{ $mountPointName.mountPath | quote }}
              name: {{ $mountPointName.mountName }}
          {{- end }}
          {{- if eq $values.global.legacyk8s false }}
          startupProbe:
            httpGet:
              path: /actuator/health/liveness
              port: health
            failureThreshold: 30
            periodSeconds: 10
          {{- end }}
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: health
            periodSeconds: 10
            failureThreshold: 10
            initialDelaySeconds: 30
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: health
            periodSeconds: 5

          resources:
            {{- toYaml $serviceDefinition.resources | nindent 12 }}
      {{- with $serviceDefinition.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $serviceDefinition.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $serviceDefinition.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

{{- end }}
